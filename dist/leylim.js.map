{"version":3,"file":"leylim.js","sources":["../lib/bus.js","../lib/constant.js","../lib/events.js","../lib/listItem.js","../lib/list.js","../lib/lifeCycle.js","../lib/row.js","../lib/utils.js","../lib/area.js","../lib/footer.js","../lib/editor.js","../lib/editorButtons.js","../lib/index.js"],"sourcesContent":["let _handlers = [];\n\n/**\n * Bus is an implementation of observable pattern\n * that handle all component communication.\n *\n * @export\n * @class Bus\n */\nexport default class Bus {\n  static get handlers() {\n    return _handlers;\n  }\n\n  static subscribe(fn) {\n    _handlers.push(fn);\n  }\n\n  static unsubscribe(fn) {\n    _handlers = _handlers.filter(item => item !== fn);\n  }\n  static fire(eventName, params, thisObj) {\n    var scope = thisObj || window;\n    _handlers.forEach(item => {\n      item.call(scope, eventName, params);\n    });\n  }\n}\n","// mostly common node class\nexport const LEYLIM_ROOT = 'leylim';\n\nexport const LIST_ITEM_CONTAINER_NODE = 'leylim__component-list';\nexport const LIST_ITEM_NODE = 'leylim__list-item';\n\nexport const AREA_NODE = 'leylim__area';\nexport const AREA_ROW_NODE = 'leylim-area-row';\nexport const AREA_ROW_TEMPLATE_NODE = 'leylim-area-row__template';\nexport const AREA_ROW_ACTIONS_NODE = 'leylim-area-row__actions';\n\nexport const FOOTER_NODE = 'leylim__footer';\n\nexport const HTML_MODE_NODE = 'leylim-html-mode';\n\nexport default {\n  LEYLIM_ROOT,\n  LIST_ITEM_CONTAINER_NODE,\n  LIST_ITEM_NODE,\n  AREA_NODE,\n  AREA_ROW_NODE,\n  AREA_ROW_ACTIONS_NODE,\n  AREA_ROW_TEMPLATE_NODE,\n  FOOTER_NODE,\n  HTML_MODE_NODE\n};\n","// Events\nconst ADD_COMPONENT = 'ADD_COMPONENT';\nconst SORT_ROW = 'SORT_ROW';\nconst UPDATE_ROW = 'UPDATE_ROW';\nconst DUPLICATE_ROW = 'DUPLICATE_ROW';\nconst DELETE_ROW = 'DELETE_ROW';\n\nexport { ADD_COMPONENT, SORT_ROW, UPDATE_ROW, DUPLICATE_ROW, DELETE_ROW };\n","import Bus from './bus';\nimport { LIST_ITEM_CONTAINER_NODE, LIST_ITEM_NODE } from './constant';\nimport { ADD_COMPONENT } from './events';\n\n/**\n * Each component list item\n *\n * @export\n * @class ListItem\n * @extends {Bus}\n */\nexport default class ListItem {\n  constructor(component, thumbnailPath) {\n    this.thumbnailPath = thumbnailPath;\n    this.component = component;\n    this.render();\n  }\n  /**\n   * This make a broadcast as ADD_COMPONENT events,\n   * when user click from any item of list\n   *\n   * @memberof ListItem\n   */\n  onclick(e) {\n    e.preventDefault();\n    // Fire event\n    Bus.fire(ADD_COMPONENT, this.component, this);\n  }\n  /**\n * Component list item\n *\n * @memberof ListItem\n * @todo handle thumbnail\n */\n  render() {\n    const parent = document.querySelector(`.${LIST_ITEM_CONTAINER_NODE}`);\n\n    const listItem = document.createElement('a');\n    listItem.href = '#';\n    listItem.onclick = this.onclick.bind(this);\n    listItem.classList.add(LIST_ITEM_NODE);\n    listItem.innerHTML = `<img src=\"${this.thumbnailPath + this.component.thumbnail}\" />`;\n\n    parent.appendChild(listItem);\n  }\n}\n","import ListItem from './listItem';\nimport { LIST_ITEM_CONTAINER_NODE } from './constant';\n\n/**\n * Render component list on the right side of the screen\n * that takes component list objecet from area.\n * @export\n * @class List\n */\nexport default class List {\n  constructor(options) {\n    this.options = options;\n    this.listNode = null;\n    this.init();\n  }\n\n  update(components) {\n    this.options.components = components;\n    this.renderListItem();\n  }\n\n  init() {\n    const { rootNode } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const listNode = document.createElement('div');\n    listNode.classList.add(LIST_ITEM_CONTAINER_NODE);\n    rootEl.appendChild(listNode);\n    this.listNode = listNode;\n    this.renderListItem();\n  }\n  /**\n   * @todo remove innerHTML with delete child\n   */\n  renderListItem() {\n    this.listNode.innerHTML = \"\";\n    const { components, thumbnailPath } = this.options;\n    for (var ii = 0; ii < components.length; ii++) {\n      new ListItem(components[ii], thumbnailPath);\n    }\n  }\n}\n","/* eslint-disable */\nlet _lifeCycleHooks;\n\nconst methods = {\n  beforeCreate(o) { return o },\n  created(o) { return o },\n  beforeRowUpdate(o) { return o },\n  rowUpdated(o) { return o },\n  beforeRowDelete(o) { return o },\n  rowDeleted(o) { return o },\n  beforeRowDuplicate(o) { return o },\n  rowDuplicated(o) { return o },\n  beforeRowAdd(o) { return o },\n  rowAdded(o) { return o },\n}\n\nconst initLifeCycle = (lifeCycleHooks) => _lifeCycleHooks = lifeCycleHooks;\n\nconst dispatch = (type, params) => {\n  return _lifeCycleHooks[type](params);\n};\n\nexport { dispatch, initLifeCycle }\nexport default methods;\n","import Bus from './bus';\nimport { dispatch } from './lifeCycle';\nimport { AREA_NODE, AREA_ROW_NODE, AREA_ROW_ACTIONS_NODE, AREA_ROW_TEMPLATE_NODE, HTML_MODE_NODE } from './constant';\nimport { DUPLICATE_ROW, DELETE_ROW } from './events';\n\n/**\n * Row class is a child item of area and that handle duplicate, edit, sort actions.\n * Also, that store dirty html and raw data of component object.\n *\n * @export\n * @class Row\n */\nlet _uuid = 0;\nexport default class Row {\n  constructor(component) {\n    this.component = Object.assign({}, component);\n    this.rowNode = null;\n    this.templateNode = null;\n    this.actionsNode = null;\n    this.rawHTMLmode = false;\n    this.actionButtons = {\n      ACTIONS_DUPLICATE: 'actions--dupicate',\n      ACTIONS_DELETE: 'actions--delete',\n      ACTIONS_HTML: 'actions--edit',\n      ACTIONS_ACTIVE: 'action-active'\n    }\n    this._uuid = _uuid++;\n  }\n\n  /**\n   * @description This function toggle contenteditable attribute of each element with given state.\n   * @param {Boolean} state ~ which state is active\n   */\n  toggleEditable(state) {\n    const editableChild = this.templateNode.querySelectorAll('[contenteditable]');\n    for (let ii = 0; ii < editableChild.length; ii++) {\n      editableChild[ii].setAttribute('contenteditable', state);\n    }\n  }\n  /**\n   * @description This function call from area which member of Leylim.\n   * @return {String} raw html of component object\n   */\n  getRawData() {\n    this.toggleEditable(false);\n    const component = Object.assign({}, this.component);\n    component.template = this.templateNode.innerHTML\n    this.toggleEditable(true);\n    return component;\n  }\n\n  /**\n   * @description This function is triggered two condition.\n   * First; When blured one of editable child of templateNode\n   * Second; When condition in renderContent method is changed as htmlMode = true\n   *\n   * @memberof Row\n   */\n  onUpdateRowTemplate = () => {\n    const data = dispatch('beforeRowUpdate', { node: this.templateNode, component: this.component });\n    const rawHtml = data.node.innerHTML;\n    this.component = data.component;\n    this.component.template = rawHtml;\n    if (this.component.onUpdate) {\n      this.component.onUpdate(this.templateNode, this.component);\n    }\n    dispatch('rowUpdated', { component: this.component, _uuid: this._uuid });\n  };\n\n  attachEvents() {\n    const { ACTIONS_DUPLICATE, ACTIONS_DELETE, ACTIONS_HTML } = this.actionButtons;\n\n\n    const editableChild = this.templateNode.querySelectorAll('[contenteditable]');\n    const duplicateButton = this.rowNode.querySelector(`.${ACTIONS_DUPLICATE}`);\n    const deleteButton = this.rowNode.querySelector(`.${ACTIONS_DELETE}`);\n    const editButton = this.rowNode.querySelector(`.${ACTIONS_HTML}`);\n\n    editableChild.forEach(element => {\n      element.onblur = this.onUpdateRowTemplate;\n    });\n\n    duplicateButton.onclick = this.onDuplicate;\n    deleteButton.onclick = this.onDelete;\n    editButton.onclick = this.changeMode;\n  }\n  /**\n   * @description If user change render mode (rawHTMLmode) as html for editing template,\n   * according to that which condition is true renderContent react that condition.\n   * For example; we suppose the rawHTMLmode is true, templateNode content set as innerText otherwise innerHTML\n   * This condition is for support editing row content as html .\n   *\n   * @memberof Row\n   */\n  renderContent = (inital) => {\n    if (this.rawHTMLmode) {\n      this.templateNode.innerText = this.component.template\n      this.templateNode.setAttribute('contenteditable', true)\n      this.templateNode.classList.add(HTML_MODE_NODE);\n    } else {\n      // condition is for init time, if empty templateNode.innerHTML\n      this.templateNode.innerHTML = this.templateNode.innerText || this.component.template\n      this.templateNode.setAttribute('contenteditable', false)\n      this.templateNode.classList.remove(HTML_MODE_NODE);\n      if (!inital) {\n        this.onUpdateRowTemplate();\n      }\n      this.toggleEditable(true);\n    }\n\n    this.attachEvents();\n  }\n  // For changing render mode\n  changeMode = (e) => {\n    e.preventDefault();\n\n    const { ACTIONS_ACTIVE, ACTIONS_HTML } = this.actionButtons;\n    const node = this.actionsNode.querySelector(`.${ACTIONS_HTML}`);\n\n    if (!this.rawHTMLmode) {\n      node.classList.add(ACTIONS_ACTIVE)\n    } else {\n      node.classList.remove(ACTIONS_ACTIVE)\n    }\n\n    this.rawHTMLmode = !this.rawHTMLmode;\n    this.renderContent();\n  }\n  // Duplicate clicked row member of rowList which stored by area\n  onDuplicate = (e) => {\n    e.preventDefault();\n    Bus.fire(DUPLICATE_ROW, this._uuid);\n  }\n  // Delete clicked row member of rowList which stored by area\n  onDelete = (e) => {\n    e.preventDefault();\n    Bus.fire(DELETE_ROW, this._uuid);\n  }\n\n  applyStyle() {\n    const { name, style } = this.component;\n    let linkName = `leylim-css-module-${name}`;\n    //https://stackoverflow.com/questions/1053902/how-to-convert-a-title-to-a-url-slug-in-jquery\n    linkName = linkName.toLowerCase().trim()\n      .toLowerCase()\n      .replace(/ /g, '-')\n      .replace(/[^\\w-]+/g, '')\n\n    const link = document.querySelector(`#${linkName}`)\n    if (link) return;\n\n    const linkNode = document.createElement('STYLE');\n    linkNode.setAttribute('id', linkName)\n    linkNode.innerHTML = style;\n    document.head.appendChild(linkNode);\n  }\n\n  render() {\n    const { ACTIONS_DUPLICATE, ACTIONS_DELETE, ACTIONS_HTML, ACTIONS_ACTIVE } = this.actionButtons;\n\n    const areaNode = document.querySelector(`.${AREA_NODE}`);\n    const rowNode = document.createElement('div');\n    rowNode.classList.add(AREA_ROW_NODE);\n    // For component template (HTML)\n    const templateNode = document.createElement('div');\n    templateNode.classList.add(AREA_ROW_TEMPLATE_NODE);\n    // For row actions delete, duplicate, edit etc.\n    const actionsNode = document.createElement('div');\n    actionsNode.classList.add(AREA_ROW_ACTIONS_NODE);\n    actionsNode.innerHTML = `\n      <a href=\"#\" class=\"leylim-actions ${ACTIONS_DUPLICATE}\"><i class=\"fa fa-copy\"></i></a>\n      <a href=\"#\" class=\"leylim-actions ${ACTIONS_DELETE}\"><i class=\"fa fa-trash-o\"></i></a>\n      <a href=\"#\" class=\"leylim-actions ${ACTIONS_HTML} ${this.rawHTMLmode ? ACTIONS_ACTIVE : ''}\"><i class=\"fa fa-html5\"></i></a>\n    `;\n\n    this.rowNode = rowNode;\n    this.templateNode = templateNode;\n    this.actionsNode = actionsNode;\n\n    // Appending child node to parent node\n    rowNode.appendChild(templateNode);\n    rowNode.appendChild(actionsNode);\n    areaNode.appendChild(rowNode);\n\n    // Apply component based css\n    this.applyStyle();\n\n    // Render content for two condition; rawHTMLmode and !rawHTMLmode\n    this.renderContent(true /*initial*/);\n    // Finally attachEvents :)\n    this.attachEvents();\n  }\n}\n","//\n\nexport const getIndex = (arr, el) => arr.indexOf(el);\n","import Bus from './bus';\nimport Row from './row';\nimport { getIndex } from './utils';\nimport { AREA_NODE } from './constant';\nimport { ADD_COMPONENT, DUPLICATE_ROW, DELETE_ROW } from './events';\nimport { dispatch } from './lifeCycle';\n\n/**\n * Area is a member of Leylim and that manage update, delete, duplicate ~ row, etc. actions.\n * Area has contain and store all component as template.\n * Therefore can generate dirty html string.\n *\n * @export\n * @class Area\n * @extends {Bus}\n */\nexport default class Area {\n  constructor(options) {\n    this.options = options;\n    this.rowList = [];\n\n    Bus.subscribe(this.handleEvents);\n    this.generateRow();\n    this.initArea();\n    this.render();\n  }\n  /**\n   * Return all rowlist data\n   *\n   * @memberof Area\n   * @return {Object} Row list\n   */\n  getRowData() {\n    const data = [];\n    const list = this.rowList;\n    for (var ii = 0; ii < list.length; ii++) {\n      let rawData = list[ii].getRawData();\n      data.push(JSON.stringify(rawData));\n    }\n\n    return data;\n  }\n  /**\n   * For external row data generating.\n   *\n   * @example\n   * ```\n   *  const components = [...];\n   *\n   *  const rowList = [\n   *    {\n   *      name: 'hacucuao',\n   *      template: `<div contenteditable>Template hacucuao</div>`\n   *    }\n   *  ]\n   *  const leylim = new Leylim({\n   *    el: '#app',\n   *    components,\n   *    rowList\n   *  });\n   * ```\n   *\n   * @memberof Area\n  */\n  generateRow() {\n    const { rowList } = this.options;\n    for (var ii = 0; ii < rowList.length; ii++) {\n      this.rowList.push(new Row(rowList[ii]));\n    }\n  }\n  /**\n   * This actions trigger by listItem\n   * @param {Object} row\n   * @memberof Area\n   */\n  deleteAndDuplicateRow(_uuid, isDuplicate) {\n    const row = {};\n    const duplicatedRow = this.rowList.filter(r => r._uuid == _uuid)[0];\n    const index = getIndex(this.rowList, duplicatedRow)\n\n    row.component = Object.assign({}, duplicatedRow.component)\n\n    if (isDuplicate) {\n      const newRow = dispatch('beforeRowDuplicate', row.component);\n      this.rowList.splice((index + 1), 0, new Row(newRow));\n      this.render();\n      dispatch('rowDuplicated', row.component);\n    } else {\n      const newRow = dispatch('beforeRowDelete', row);\n      this.rowList.splice(index, 1);\n      this.render();\n      dispatch('rowDeleted', newRow);\n    }\n  }\n  /**\n   * Actions from listItem\n   * This actions trigger by listItem\n   * @param {any} component\n   * @memberof Area\n   */\n  addComponent(row) {\n    const newRow = dispatch('beforeRowAdd', row);\n    this.rowList.push(new Row(newRow));\n    this.render();\n    dispatch('rowAdded');\n  }\n  /**\n   * It make out all relevant events .\n   * @memberof Area\n   */\n  handleEvents = (type, params) => {\n    switch (type) {\n      case ADD_COMPONENT:\n        this.addComponent(params);\n        break;\n      case DUPLICATE_ROW:\n        this.deleteAndDuplicateRow(params, true);\n        break;\n      case DELETE_ROW:\n        this.deleteAndDuplicateRow(params, false);\n        break;\n    }\n  };\n  /**\n   * This method appendices itself to rootEl of leylim.\n   */\n  initArea() {\n    const { rootNode } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const areaNode = document.createElement('div');\n    areaNode.classList.add(AREA_NODE);\n    rootEl.appendChild(areaNode);\n    this.areaNode = areaNode;\n  }\n  /**\n   * re-render and init render all row\n   * @memberof Area\n   */\n  render() {\n    const areaNode = this.areaNode;\n\n    while (areaNode.firstChild) {\n      areaNode.removeChild(areaNode.firstChild);\n    }\n\n    if (this.rowList.length) {\n      for (var ii = 0; ii < this.rowList.length; ii++) {\n        this.rowList[ii].render(ii);\n      }\n    } else {\n      areaNode.innerHTML = `<div class=\"leylim__empty-area\"><span>😒</span> </br> No content</div>`\n    }\n  }\n}\n","import { FOOTER_NODE } from './constant';\n\n/**\n * Footer\n * @export\n * @class Footer\n */\nexport default class Footer {\n  constructor(options) {\n    this.options = options;\n    this.init();\n  }\n  /**\n   * Generate button node for footer\n   *\n   * @param {object} buttonOptions\n   * @returns {HTMLButtonElement}\n   * @memberof Footer\n   */\n  getButtons(buttonOptions) {\n\n    const button = document.createElement('button');\n    button.classList.add('leylim__footer-button');\n    button.classList.add(buttonOptions.btnClass);\n    button.setAttribute('type', 'button')\n    button.innerText = buttonOptions.text;\n    button.onclick = buttonOptions.handler;\n\n    return button;\n  }\n\n  init() {\n    const { rootNode, buttons } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const buttonNodeContainer = document.createElement('div');\n    buttonNodeContainer.classList.add(FOOTER_NODE);\n\n    for (var ii = 0; ii < buttons.length; ii++) {\n      let button = this.getButtons(buttons[ii]);\n      buttonNodeContainer.appendChild(button);\n    }\n    rootEl.appendChild(buttonNodeContainer);\n  }\n\n}\n","import { LEYLIM_ROOT } from './constant';\n// import editorButtons from './editorButtons';\nimport Leylim from './index';\n\nexport default class Editor {\n  constructor(options) {\n    this.options = options;\n    this.editorNode = null;\n    const editorButtons = Leylim.editorButtons;\n    const _editorButtons = options.filter ? options.filter(editorButtons) : editorButtons;\n\n    if (options.merge) {\n      this.buttons = _editorButtons.concat(options.buttons);\n    } else {\n      this.buttons = options.buttons;\n    }\n\n    this.init();\n    // this.catchSelection();\n  }\n\n  /**\n   * @todo when selection contains any button add active class to selected button\n   * @memberof Editor\n   */\n  // catchSelection() {\n  //   document.onselectionchange = (e) => {\n  //     const selection = window.getSelection();\n  //     // console.log(selection);\n  //   }\n  // }\n\n\n  init() {\n    const buttons = this.buttons;\n    const rootNode = document.querySelector(`.${LEYLIM_ROOT}`);\n    const editorNode = document.createElement('div');\n    this.editorNode = editorNode;\n    editorNode.classList.add('leylim-editor');\n\n\n    for (let ii = 0; ii < buttons.length; ii++) {\n      const buttonNode = document.createElement('A');\n      buttonNode.href = '#';\n      buttonNode.classList.add('leylim-editor__button');\n      buttonNode.innerHTML = `<i class=\"${buttons[ii].icon}\"></i>${buttons[ii].innerText || ''}`;\n      buttonNode.onclick = (e) => this.onClick(e, buttons[ii]);\n\n      editorNode.appendChild(buttonNode);\n    }\n    rootNode.appendChild(editorNode);\n  }\n\n  /**\n   * @todo provide selection object for commandObject handler (customEditorButtons)\n   *\n   * @memberof Editor\n   */\n  onClick = (e, commandObject) => {\n    e.preventDefault();\n    if (commandObject.handler) {\n      commandObject.handler(window.getSelection())\n    } else {\n      document.execCommand(commandObject.command, true, commandObject.value || 2)\n    }\n\n  }\n\n}\n","export default [\n  {\n    command: 'bold',\n    icon: 'fa fa-bold'\n  },\n  {\n    command: 'italic',\n    icon: 'fa fa-italic'\n  },\n  {\n    command: 'createLink',\n    icon: 'fa fa-link',\n    handler(){\n      const url = window.prompt('Please insert a link', 'http://');\n      document.execCommand('createLink', true, url);\n    }\n  },\n  {\n    command: 'unLink',\n    icon: 'fa fa-unlink',\n  },\n  {\n    command: 'cut',\n    icon: 'fa fa-cut'\n  },\n  {\n    command: 'delete',\n    icon: 'fa fa-trash-o',\n    handler(selection){\n      document.execCommand('insertHTML', true, `<p>${selection.toString()}</p>`);\n    }\n  },\n  {\n    command: 'fontName',\n    icon: 'fa fa-font',\n    value: 'sans',\n    handler(selection){\n      const ff = window.prompt('Please insert font family', 'sans');\n      document.execCommand('insertHTML', true, `<span style=\"font-family: ${ff}\">${selection}</span>`);\n    }\n  },\n  {\n    command: 'foreColor',\n    icon: 'fa fa-paint-brush',\n    value: 'yellow',\n    handler(selection){\n      const color = window.prompt('Please insert color', '#000');\n      document.execCommand('insertHTML', true, `<span style=\"color: ${color}\">${selection}</span>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 1,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h1>${selection}</h1>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 2,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h2>${selection}</h2>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 3,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h3>${selection}</h3>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 4,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h4>${selection}</h4>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 5,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h5>${selection}</h5>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 6,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h6>${selection}</h6>`);\n    }\n  },\n]\n","import List from './list';\nimport Area from './area';\nimport Footer from './footer';\nimport Editor from './editor';\nimport editorButtons from './editorButtons.js';\nimport lifeCycleHooks, { dispatch, initLifeCycle } from './lifeCycle';\n\nimport nodes, { LEYLIM_ROOT } from './constant';\n\n/**\n * Constructor of Leylim\n *\n * @example\n * ```javascript\n * const leylim = new Leylim({\n *   el: '#app',\n *   components,\n *   rowList\n * });\n * ```\n *\n * @export\n * @class Leylim\n */\nexport default class Leylim {\n\n  constructor(options) {\n    /**\n     * @todo extends options\n     * @todo check is options.el dom element?\n     */\n    this.options = options;\n    const _lifeCycleHooks = Object.assign({}, lifeCycleHooks, this.options);\n    initLifeCycle(_lifeCycleHooks);\n    dispatch('beforeCreate');\n    this.init();\n  }\n  // All static properties of Leylim,  also you can use under plugin install\n  static editorButtons = editorButtons;\n  static nodes = nodes;\n  /**\n   * Update all member of Leylim\n   * Avilable update options; components, rowList, buttons\n   */\n  update(options) {\n    const { components } = options;\n    this.options.components = components;\n    this._list.update(components);\n  }\n  /**\n   * Public method for get all rowList\n   * @public\n   * @returns\n   * @memberof Leylim\n   */\n  getRowData() {\n    return this._area.getRowData();\n  }\n  /**\n   * init member of leylim for example; List, Area etc\n   * @private\n   */\n  init() {\n    const {\n      components = [],\n      el, rowList = [],\n      buttons = [],\n      thumbnailPath = '',\n      customEditorButtons = {\n        merge: false,\n        buttons: [],\n      }\n    } = this.options;\n\n    if (!components.length)\n      throw new Error(\"Can you give me components? please! If you don't have an idea; https://github.com/abdullah/leylim \");\n\n    const appNode = document.querySelector(el);\n    const leylimNode = document.createElement('div');\n    leylimNode.classList.add(LEYLIM_ROOT);\n    appNode.appendChild(leylimNode);\n\n    this._list = new List({\n      rootNode: `.${LEYLIM_ROOT}`,\n      thumbnailPath,\n      components\n    });\n\n    this._footer = new Footer({\n      rootNode: `.${LEYLIM_ROOT}`,\n      buttons\n    });\n\n    this._area = new Area({\n      rootNode: `.${LEYLIM_ROOT}`,\n      rowList,\n    });\n\n    this._editor = new Editor({\n      merge: customEditorButtons.merge,\n      buttons: customEditorButtons.buttons,\n      filter: customEditorButtons.filter\n    });\n\n\n    dispatch('created')\n  }\n}\n"],"names":["_handlers","Bus","fn","push","filter","item","eventName","params","thisObj","scope","window","forEach","call","HTML_MODE_NODE","ADD_COMPONENT","DUPLICATE_ROW","DELETE_ROW","ListItem","component","thumbnailPath","render","e","preventDefault","fire","this","parent","document","querySelector","listItem","createElement","href","onclick","bind","classList","add","innerHTML","thumbnail","appendChild","List","options","listNode","init","components","renderListItem","rootNode","rootEl","ii","length","_lifeCycleHooks","methods","o","initLifeCycle","lifeCycleHooks","dispatch","type","_uuid","Row","onUpdateRowTemplate","data","node","_this","templateNode","rawHtml","template","onUpdate","renderContent","inital","rawHTMLmode","innerText","setAttribute","remove","toggleEditable","attachEvents","changeMode","actionButtons","ACTIONS_ACTIVE","ACTIONS_HTML","actionsNode","onDuplicate","onDelete","Object","assign","rowNode","state","editableChild","querySelectorAll","ACTIONS_DUPLICATE","ACTIONS_DELETE","duplicateButton","deleteButton","editButton","onblur","_this2","name","style","linkName","toLowerCase","trim","replace","linkNode","head","areaNode","applyStyle","getIndex","arr","el","indexOf","Area","handleEvents","addComponent","deleteAndDuplicateRow","rowList","subscribe","generateRow","initArea","list","rawData","getRawData","JSON","stringify","isDuplicate","row","duplicatedRow","r","index","newRow","splice","firstChild","removeChild","Footer","buttonOptions","button","btnClass","text","handler","buttons","buttonNodeContainer","getButtons","Editor","onClick","commandObject","getSelection","execCommand","command","value","editorNode","editorButtons","Leylim","_editorButtons","merge","concat","buttonNode","icon","url","prompt","selection","toString","ff","color","_list","update","_area","getRowData","customEditorButtons","Error","appNode","leylimNode","_footer","_editor","nodes"],"mappings":"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"}