{"version":3,"file":"leylim.js","sources":["../lib/bus.js","../lib/events.js","../lib/listItem.js","../lib/constant.js","../lib/list.js","../lib/row.js","../lib/area.js","../lib/footer.js","../lib/index.js"],"sourcesContent":["let _handlers = [];\n\n/**\n * Bus is an implementation of observable pattern\n * that handle all component communication.\n *\n * @export\n * @class Bus\n */\nexport default class Bus {\n  static get handlers() {\n    return _handlers;\n  }\n\n  subscribe(fn) {\n    _handlers.push(fn);\n  }\n\n  unsubscribe(fn) {\n    _handlers = _handlers.filter(item => item !== fn);\n  }\n  /* eslint-disable */\n  fire(eventName, params, thisObj) {\n    var scope = thisObj || window;\n    _handlers.forEach(item => {\n      item.call(scope, eventName, params);\n    });\n  }\n}\n","// Events\nconst ADD_COMPONENT = 'ADD_COMPONENT';\nconst SORT_ROW = 'SORT_ROW';\nconst UPDATE_ROW = 'UPDATE_ROW';\nconst DUPLICATE_ROW = 'DUPLICATE_ROW';\nconst DELETE_ROW = 'DELETE_ROW';\n\nexport { ADD_COMPONENT, SORT_ROW, UPDATE_ROW, DUPLICATE_ROW, DELETE_ROW };\n","import Bus from './bus';\nimport { LIST_ITEM_CONTAINER_NODE, LIST_ITEM_NODE } from './constant';\nimport { ADD_COMPONENT } from './events';\n\n/**\n * Each component list item\n *\n * @export\n * @class ListItem\n * @extends {Bus}\n */\nexport default class ListItem extends Bus {\n  constructor(component) {\n    super();\n    this.component = component;\n    this.render();\n  }\n  /**\n   * This make a broadcast as ADD_COMPONENT events,\n   * when user click from any item of list\n   *\n   * @memberof ListItem\n   */\n  onclick() {\n    // Fire event\n    this.fire(ADD_COMPONENT, this.component, this);\n  }\n  /**\n * Component list item\n *\n * @memberof ListItem\n * @todo handle thumbnail\n */\n  render() {\n    const parent = document.querySelector(`.${LIST_ITEM_CONTAINER_NODE}`);\n\n    const listItem = document.createElement('a');\n    listItem.onclick = this.onclick.bind(this);\n    listItem.classList.add(LIST_ITEM_NODE);\n    listItem.innerHTML = this.component.name;\n\n    parent.appendChild(listItem);\n  }\n}\n","// mostly common node class\nconst LEYLIM_ROOT = 'leylim';\n\nconst LIST_ITEM_CONTAINER_NODE = 'component-list';\nconst LIST_ITEM_NODE = 'component-list__item';\n\nconst AREA_NODE = 'leylim-area';\nconst AREA_ROW_NODE = 'leylim-area__row';\nconst AREA_ROW_TEMPLATE_NODE = 'row-template';\nconst AREA_ROW_ACTIONS_NODE = 'row-actions';\n\n\nexport {\n  LEYLIM_ROOT,\n  LIST_ITEM_CONTAINER_NODE,\n  LIST_ITEM_NODE,\n  AREA_NODE,\n  AREA_ROW_NODE,\n  AREA_ROW_ACTIONS_NODE,\n  AREA_ROW_TEMPLATE_NODE\n};\n","import ListItem from './listItem';\nimport { LIST_ITEM_CONTAINER_NODE } from './constant';\n\n/**\n * Render component list on the right side of the screen\n * that takes component list objecet from area.\n * @export\n * @class List\n */\nexport default class List {\n  constructor(options) {\n    this.options = options;\n    this.listNode = null;\n    this.init();\n  }\n\n  update(components){\n    this.options.components = components;\n    this.renderListItem();\n  }\n\n  init() {\n    const { rootNode } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const listNode = document.createElement('div');\n    listNode.classList.add(LIST_ITEM_CONTAINER_NODE);\n    rootEl.appendChild(listNode);\n    this.listNode = listNode;\n    this.renderListItem();\n  }\n\n  renderListItem() {\n    this.listNode.innerHTML = \"\";\n    const { components } = this.options;\n    for (var ii = 0; ii < components.length; ii++) {\n      new ListItem(components[ii]);\n    }\n  }\n}\n","import Bus from './bus';\nimport { AREA_NODE, AREA_ROW_NODE, AREA_ROW_ACTIONS_NODE, AREA_ROW_TEMPLATE_NODE } from './constant';\nimport { UPDATE_ROW, DUPLICATE_ROW, DELETE_ROW } from './events';\n\n/**\n * Row class is a child item of area and that handle duplicate, edit, sort actions.\n * Also, that store dirty html and raw data of component object.\n *\n * @export\n * @class Row\n * @extends {Bus}\n */\nexport default class Row extends Bus {\n  constructor(component) {\n    super();\n    this.component = Object.assign({}, component);\n    this.rowNode = null;\n    this.templateNode = null;\n    this.actionsNode = null;\n    this.rawHTMLmode = false;\n    this.actionButtons = {\n      ACTIONS_DUPLICATE: 'row-duplicate',\n      ACTIONS_DELETE: 'row-delete',\n      ACTIONS_HTML: 'row-edit-as-html',\n    }\n  }\n\n  /**\n   * @description This function is triggered two condition.\n   * First; When blured one of editable child of templateNode\n   * Second; When condition in renderContent method is changed as htmlMode = true\n   *\n   * @memberof Row\n   */\n  onUpdateRowTemplate = () => {\n    const rawHtml = this.templateNode.innerHTML;\n    this.component.template = rawHtml;\n    this.fire(UPDATE_ROW);\n  };\n\n  attachEvents() {\n    const {ACTIONS_DUPLICATE, ACTIONS_DELETE, ACTIONS_HTML} = this.actionButtons;\n\n    const editableChild = this.templateNode.querySelectorAll('[contenteditable]');\n    const duplicateButton = this.rowNode.querySelector(`.${ACTIONS_DUPLICATE}`);\n    const deleteButton = this.rowNode.querySelector(`.${ACTIONS_DELETE}`);\n    const editButton = this.rowNode.querySelector(`.${ACTIONS_HTML}`);\n\n    editableChild.forEach(element => {\n      element.onblur = this.onUpdateRowTemplate;\n    });\n\n    duplicateButton.onclick = this.onDuplicate;\n    deleteButton.onclick = this.onDelete;\n    editButton.onclick = this.changeMode;\n  }\n  // For changing render mode\n  changeMode = () => {\n    this.rawHTMLmode = !this.rawHTMLmode;\n    this.renderContent();\n  }\n  /**\n   * @description If user change render mode (rawHTMLmode) as html for editing template,\n   * according to that which condition is true renderContent react that condition.\n   * For example; we suppose the rawHTMLmode is true, templateNode content set as innerText otherwise innerHTML\n   * This condition is for support editing row content as html .\n   *\n   * @memberof Row\n   */\n  renderContent = () => {\n    if (this.rawHTMLmode) {\n      this.templateNode.innerText = this.component.template\n      this.templateNode.setAttribute('contenteditable', true)\n      this.templateNode.classList.add('html-mode');\n    } else {\n      // condition is for init time, if empty templateNode.innerHTML\n      this.templateNode.innerHTML = this.templateNode.innerText || this.component.template\n      this.templateNode.setAttribute('contenteditable', false)\n      this.templateNode.classList.remove('html-mode');\n      this.onUpdateRowTemplate();\n    }\n\n    this.attachEvents();\n  }\n  // Duplicate clicked row member of rowList which stored by area\n  onDuplicate = (e) => {\n    e.preventDefault();\n\n    const component = Object.assign({}, this.component);\n    const index = this.index;\n    this.fire(DUPLICATE_ROW, {\n      component,\n      index\n    });\n  }\n  // Delete clicked row member of rowList which stored by area\n  onDelete = (e) => {\n    e.preventDefault();\n\n    const component = Object.assign({}, this.component);\n    const index = this.index;\n    this.fire(DELETE_ROW, {\n      component,\n      index\n    });\n  }\n\n  render(index) {\n    const {ACTIONS_DUPLICATE, ACTIONS_DELETE, ACTIONS_HTML} = this.actionButtons;\n    // index is stored for duplicate and delete actions\n    this.index = index;\n\n    const areaNode = document.querySelector(`.${AREA_NODE}`);\n    const rowNode = document.createElement('div');\n    rowNode.classList.add(AREA_ROW_NODE);\n    // For component template (HTML)\n    const templateNode = document.createElement('div');\n    templateNode.classList.add(AREA_ROW_TEMPLATE_NODE);\n    // For row actions delete, duplicate, edit etc.\n    const actionsNode = document.createElement('div');\n    actionsNode.classList.add(AREA_ROW_ACTIONS_NODE);\n    actionsNode.innerHTML = `\n      <a class=\"${ACTIONS_DUPLICATE}\">DUP</a>\n      <a class=\"${ACTIONS_DELETE}\">DEL</a>\n      <a class=\"${ACTIONS_HTML}\">HMLT</a>\n    `;\n\n    this.rowNode = rowNode;\n    this.templateNode = templateNode;\n    this.actionsNode = actionsNode;\n\n    // Appending child node to parent node\n    rowNode.appendChild(templateNode);\n    rowNode.appendChild(actionsNode);\n    areaNode.appendChild(rowNode);\n    // Render content for two condition; rawHTMLmode and !rawHTMLmode\n    this.renderContent();\n    // Finally attachEvents :)\n    this.attachEvents();\n  }\n}\n","import Bus from './bus';\nimport Row from './row';\nimport { AREA_NODE } from './constant';\nimport { ADD_COMPONENT, DUPLICATE_ROW, DELETE_ROW } from './events';\n\n/**\n * Area is a member of Leylim and that manage update, delete, duplicate ~ row, etc. actions.\n * Area has contain and store all component as template.\n * Therefore can generate dirty html string.\n *\n * @export\n * @class Area\n * @extends {Bus}\n */\nexport default class Area extends Bus {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.rowList = [];\n\n    this.subscribe(this.handleEvents);\n    this.generateRow();\n    this.initArea();\n    this.render();\n  }\n  /**\n   * Return all rowlist data\n   *\n   * @memberof Area\n   * @return {Object} Row list\n   */\n  getRowData() {\n    const data = [];\n    const list = this.rowList;\n    for (var ii = 0; ii < list.length; ii++) {\n      let rowData = Object.assign({}, list[ii].component);\n      data.push(JSON.stringify(rowData));\n    }\n\n    return data;\n  }\n  /**\n   * For external raw data generating.\n   *\n   * @example\n   * ```\n   *  const components = [...];\n   *\n   *  const rowList = [\n   *    {\n   *      name: 'hacucuao',\n   *      template: `<div contenteditable>Template hacucuao</div>`\n   *    }\n   *  ]\n   *  const leylim = new Leylim({\n   *    el: '#app',\n   *    components,\n   *    rowList\n   *  });\n   * ```\n   *\n   * @memberof Area\n  */\n  generateRow() {\n    const {rowList} = this.options;\n    for (var ii = 0; ii < rowList.length; ii++) {\n      this.rowList.push(new Row(rowList[ii], ii));\n    }\n  }\n  /**\n   * This actions trigger by listItem\n   * @param {Object} row\n   * @memberof Area\n   */\n  duplicateRow(row) {\n    this.rowList.splice((row.index+1), 0, new Row(row.component));\n    this.render();\n  }\n\n  /**\n   * This actions trigger by listItem\n   * @param {Object} row\n   * @memberof Area\n   */\n  deleteRow(row) {\n    this.rowList.splice(row.index, 1);\n    this.render();\n  }\n  /**\n   * Actions from listItem\n   * This actions trigger by listItem\n   * @param {any} component\n   * @memberof Area\n   */\n  addComponent(component) {\n    this.rowList.push(new Row(component));\n    this.render();\n  }\n  /**\n   * It make out all relevant events .\n   * @memberof Area\n   */\n  handleEvents = (type, params) => {\n    switch (type) {\n      case ADD_COMPONENT:\n        this.addComponent(params);\n        break;\n      case DUPLICATE_ROW:\n        this.duplicateRow(params);\n        break;\n      case DELETE_ROW:\n        this.deleteRow(params);\n        break;\n    }\n  };\n  /**\n   * This method appendices itself to rootEl of leylim.\n   */\n  initArea() {\n    const {rootNode} = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const areaNode = document.createElement('div');\n    areaNode.classList.add(AREA_NODE);\n    rootEl.appendChild(areaNode);\n    this.areaNode = areaNode;\n  }\n  /**\n   * re-render and init render all row\n   * @memberof Area\n   */\n  render() {\n    const areaNode = this.areaNode;\n    while (areaNode.firstChild) {\n      areaNode.removeChild(areaNode.firstChild);\n    }\n\n    for (var ii = 0; ii < this.rowList.length; ii++) {\n      this.rowList[ii].render(ii);\n    }\n  }\n}\n","import Bus from './bus';\n/**\n * Footer\n * @export\n * @class Footer\n */\nexport default class Footer extends Bus {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.init();\n  }\n\n  onShow = () => {\n    /* eslint-disable */\n    this.fire()\n  }\n\n  /**\n   * Generate button node for footer\n   *\n   * @param {object} buttonOptions\n   * @returns {HTMLButtonElement}\n   * @memberof Footer\n   */\n  getButtons(buttonOptions) {\n\n    const button = document.createElement('button');\n    button.classList.add('footer__button');\n    button.classList.add(buttonOptions.class);\n    button.innerText = buttonOptions.text;\n    button.onclick = buttonOptions.handler;\n\n    return button;\n  }\n\n  init() {\n    const { rootNode, buttons } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const buttonNodeContainer = document.createElement('div');\n    buttonNodeContainer.classList.add('leylim-footer');\n\n    for (var ii = 0; ii < buttons.length; ii++) {\n      let button = this.getButtons(buttons[ii]);\n      buttonNodeContainer.appendChild(button);\n    }\n    rootEl.appendChild(buttonNodeContainer);\n  }\n\n}\n","import './index.scss';\n\nimport Bus from './bus';\nimport List from './list';\nimport Area from './area';\nimport Footer from './footer';\n\nimport { LEYLIM_ROOT } from './constant';\n/**\n * Constructor of Leylim\n *\n * @example\n * ```javascript\n * const leylim = new Leylim({\n *   el: '#app',\n *   components,\n *   rowList\n * });\n * ```\n *\n * @export\n * @class Leylim\n * @extends {Bus}\n */\nexport default class Leylim extends Bus {\n\n  constructor(options) {\n    super();\n    /**\n     * @todo extends options\n     * @todo check is options.el dom element?\n     */\n    this.options = options;\n    this.init();\n  }\n  /**\n   * For plugin using\n   * @static\n   * @memberof Leylim\n   */\n  static use() {}\n  /**\n   * Update all member of Leylim\n   * Avilable update options; components, rowList, buttons\n   */\n  update(options) {\n    /* eslint-disable */\n    const {components} = options;\n    this.options.components = components;\n    this._list.update(components);\n  }\n  /**\n   * Public method for get all rowList\n   * @public\n   * @returns\n   * @memberof Leylim\n   */\n  getRowData() {\n    return this._area.getRowData();\n  }\n  /**\n   * init member of leylim for example; List, Area etc\n   * @private\n   */\n  init() {\n    const {components, el, rowList, buttons} = this.options;\n    const appNode = document.querySelector(el);\n    const leylimNode = document.createElement('div');\n    leylimNode.classList.add(LEYLIM_ROOT);\n    appNode.appendChild(leylimNode);\n\n    this._list = new List({\n      rootNode: `.${LEYLIM_ROOT}`,\n      components\n    });\n\n    this._area = new Area({\n      rootNode: `.${LEYLIM_ROOT}`,\n      rowList,\n    });\n\n    this._footer = new Footer({\n      rootNode: `.${LEYLIM_ROOT}`,\n      buttons\n    })\n  }\n}\n"],"names":["_handlers","Bus","fn","push","filter","item","eventName","params","thisObj","scope","window","forEach","call","ADD_COMPONENT","DUPLICATE_ROW","DELETE_ROW","ListItem","component","render","fire","this","parent","document","querySelector","listItem","createElement","onclick","bind","classList","add","innerHTML","name","appendChild","List","options","listNode","init","components","renderListItem","rootNode","rootEl","ii","length","Row","Object","assign","rowNode","templateNode","actionsNode","rawHTMLmode","actionButtons","ACTIONS_DUPLICATE","ACTIONS_DELETE","ACTIONS_HTML","editableChild","querySelectorAll","duplicateButton","deleteButton","editButton","onblur","_this2","onUpdateRowTemplate","onDuplicate","onDelete","changeMode","index","areaNode","renderContent","attachEvents","rawHtml","_this3","template","innerText","setAttribute","remove","e","preventDefault","Area","handleEvents","type","addComponent","duplicateRow","deleteRow","rowList","subscribe","_this","generateRow","initArea","data","list","rowData","JSON","stringify","row","splice","firstChild","removeChild","Footer","onShow","buttonOptions","button","class","text","handler","buttons","buttonNodeContainer","getButtons","_list","update","_area","getRowData","el","appNode","leylimNode","_footer"],"mappings":"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"}