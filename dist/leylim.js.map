{"version":3,"file":"leylim.js","sources":["../lib/bus.js","../lib/events.js","../lib/listItem.js","../lib/constant.js","../lib/list.js","../lib/row.js","../lib/area.js","../lib/footer.js","../lib/editorButtons.js","../lib/editor.js","../lib/lifeCycle.js","../lib/index.js"],"sourcesContent":["let _handlers = [];\n\n/**\n * Bus is an implementation of observable pattern\n * that handle all component communication.\n *\n * @export\n * @class Bus\n */\nexport default class Bus {\n  static get handlers() {\n    return _handlers;\n  }\n\n  subscribe(fn) {\n    _handlers.push(fn);\n  }\n\n  unsubscribe(fn) {\n    _handlers = _handlers.filter(item => item !== fn);\n  }\n  /* eslint-disable */\n  fire(eventName, params, thisObj) {\n    var scope = thisObj || window;\n    _handlers.forEach(item => {\n      item.call(scope, eventName, params);\n    });\n  }\n}\n","// Events\nconst ADD_COMPONENT = 'ADD_COMPONENT';\nconst SORT_ROW = 'SORT_ROW';\nconst UPDATE_ROW = 'UPDATE_ROW';\nconst DUPLICATE_ROW = 'DUPLICATE_ROW';\nconst DELETE_ROW = 'DELETE_ROW';\n\nexport { ADD_COMPONENT, SORT_ROW, UPDATE_ROW, DUPLICATE_ROW, DELETE_ROW };\n","import Bus from './bus';\nimport { LIST_ITEM_CONTAINER_NODE, LIST_ITEM_NODE } from './constant';\nimport { ADD_COMPONENT } from './events';\n\n/**\n * Each component list item\n *\n * @export\n * @class ListItem\n * @extends {Bus}\n */\nexport default class ListItem extends Bus {\n  constructor(component, thumbnailPath) {\n    super();\n    this.thumbnailPath = thumbnailPath;\n    this.component = component;\n    this.render();\n  }\n  /**\n   * This make a broadcast as ADD_COMPONENT events,\n   * when user click from any item of list\n   *\n   * @memberof ListItem\n   */\n  onclick(e) {\n    e.preventDefault();\n    // Fire event\n    this.fire(ADD_COMPONENT, this.component, this);\n  }\n  /**\n * Component list item\n *\n * @memberof ListItem\n * @todo handle thumbnail\n */\n  render() {\n    const parent = document.querySelector(`.${LIST_ITEM_CONTAINER_NODE}`);\n\n    const listItem = document.createElement('a');\n    listItem.href = '#';\n    listItem.onclick = this.onclick.bind(this);\n    listItem.classList.add(LIST_ITEM_NODE);\n    listItem.innerHTML = `<img src=\"${this.thumbnailPath + this.component.thumbnail}\" />`;\n\n    parent.appendChild(listItem);\n  }\n}\n","// mostly common node class\nconst LEYLIM_ROOT = 'leylim';\n\nconst LIST_ITEM_CONTAINER_NODE = 'leylim__component-list';\nconst LIST_ITEM_NODE = 'leylim__list-item';\n\nconst AREA_NODE = 'leylim__area';\nconst AREA_ROW_NODE = 'leylim-area-row';\nconst AREA_ROW_TEMPLATE_NODE = 'leylim-area-row__template';\nconst AREA_ROW_ACTIONS_NODE = 'leylim-area-row__actions';\n\nconst FOOTER_NODE = 'leylim__footer';\n\nconst HTML_MODE_NODE = 'leylim-html-mode';\n\nexport {\n  LEYLIM_ROOT,\n  LIST_ITEM_CONTAINER_NODE,\n  LIST_ITEM_NODE,\n  AREA_NODE,\n  AREA_ROW_NODE,\n  AREA_ROW_ACTIONS_NODE,\n  AREA_ROW_TEMPLATE_NODE,\n  FOOTER_NODE,\n  HTML_MODE_NODE\n};\n","import ListItem from './listItem';\nimport { LIST_ITEM_CONTAINER_NODE } from './constant';\n\n/**\n * Render component list on the right side of the screen\n * that takes component list objecet from area.\n * @export\n * @class List\n */\nexport default class List {\n  constructor(options) {\n    this.options = options;\n    this.listNode = null;\n    this.init();\n  }\n\n  update(components) {\n    this.options.components = components;\n    this.renderListItem();\n  }\n\n  init() {\n    const { rootNode } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const listNode = document.createElement('div');\n    listNode.classList.add(LIST_ITEM_CONTAINER_NODE);\n    rootEl.appendChild(listNode);\n    this.listNode = listNode;\n    this.renderListItem();\n  }\n  /**\n   * @todo remove innerHTML with delete child\n   */\n  renderListItem() {\n    this.listNode.innerHTML = \"\";\n    const { components, thumbnailPath } = this.options;\n    for (var ii = 0; ii < components.length; ii++) {\n      new ListItem(components[ii], thumbnailPath);\n    }\n  }\n}\n","import Bus from './bus';\nimport { AREA_NODE, AREA_ROW_NODE, AREA_ROW_ACTIONS_NODE, AREA_ROW_TEMPLATE_NODE, HTML_MODE_NODE } from './constant';\nimport { DUPLICATE_ROW, DELETE_ROW } from './events';\n\n/**\n * Row class is a child item of area and that handle duplicate, edit, sort actions.\n * Also, that store dirty html and raw data of component object.\n *\n * @export\n * @class Row\n * @extends {Bus}\n */\nexport default class Row extends Bus {\n  constructor(component) {\n    super();\n    this.component = Object.assign({}, component);\n    this.rowNode = null;\n    this.index = 0;\n    this.templateNode = null;\n    this.actionsNode = null;\n    this.rawHTMLmode = false;\n    this.actionButtons = {\n      ACTIONS_DUPLICATE: 'leylim-actions actions--dupicate',\n      ACTIONS_DELETE: 'leylim-actions actions--delete',\n      ACTIONS_HTML: 'leylim-actions actions--edit',\n      ACTIONS_ACTIVE: 'action-active'\n    }\n  }\n\n  static useEvents(options) {\n    this.beforeRowUpdate = options.beforeRowUpdate;\n    this.rowUpdated = options.rowUpdated;\n  }\n  /**\n   * @description This function toggle contenteditable attribute of each element with given state.\n   * @param {Boolean} state ~ which state is active\n   */\n  toggleEditable(state) {\n    const editableChild = this.templateNode.querySelectorAll('[contenteditable]');\n    for (let ii = 0; ii < editableChild.length; ii++) {\n      editableChild[ii].setAttribute('contenteditable', state);\n    }\n  }\n  /**\n   * @description This function call from area which member of Leylim.\n   * @return {String} raw html of component object\n   */\n  getRawData() {\n    this.toggleEditable(false);\n    const interimRawHTML = this.templateNode.innerHTML;\n    this.toggleEditable(true);\n    return interimRawHTML;\n  }\n\n  /**\n   * @description This function is triggered two condition.\n   * First; When blured one of editable child of templateNode\n   * Second; When condition in renderContent method is changed as htmlMode = true\n   *\n   * @memberof Row\n   */\n  onUpdateRowTemplate = () => {\n    Row.beforeRowUpdate(this.templateNode, this.component, (node, component) => {\n      const rawHtml = node.innerHTML;\n      this.component = component;\n      this.component.template = rawHtml;\n    });\n\n    Row.rowUpdated(this.component, this.index);\n    // this.fire(UPDATE_ROW);\n  };\n\n  attachEvents() {\n    const { ACTIONS_DUPLICATE, ACTIONS_DELETE, ACTIONS_HTML } = this.actionButtons;\n\n\n    const editableChild = this.templateNode.querySelectorAll('[contenteditable]');\n    const duplicateButton = this.rowNode.querySelector(`.${ACTIONS_DUPLICATE.split(' ').join('.')}`);\n    const deleteButton = this.rowNode.querySelector(`.${ACTIONS_DELETE.split(' ').join('.')}`);\n    const editButton = this.rowNode.querySelector(`.${ACTIONS_HTML.split(' ').join('.')}`);\n\n    editableChild.forEach(element => {\n      element.onblur = this.onUpdateRowTemplate;\n    });\n\n    duplicateButton.onclick = this.onDuplicate;\n    deleteButton.onclick = this.onDelete;\n    editButton.onclick = this.changeMode;\n  }\n  /**\n   * @description If user change render mode (rawHTMLmode) as html for editing template,\n   * according to that which condition is true renderContent react that condition.\n   * For example; we suppose the rawHTMLmode is true, templateNode content set as innerText otherwise innerHTML\n   * This condition is for support editing row content as html .\n   *\n   * @memberof Row\n   */\n  renderContent = (inital) => {\n    if (this.rawHTMLmode) {\n      this.templateNode.innerText = this.component.template\n      this.templateNode.setAttribute('contenteditable', true)\n      this.templateNode.classList.add(HTML_MODE_NODE);\n    } else {\n      // condition is for init time, if empty templateNode.innerHTML\n      this.templateNode.innerHTML = this.templateNode.innerText || this.component.template\n      this.templateNode.setAttribute('contenteditable', false)\n      this.templateNode.classList.remove(HTML_MODE_NODE);\n      if (!inital) {\n        this.onUpdateRowTemplate();\n      }\n      this.toggleEditable(true);\n    }\n\n    this.attachEvents();\n  }\n  // For changing render mode\n  changeMode = (e) => {\n    const { ACTIONS_ACTIVE } = this.actionButtons;\n\n    e.preventDefault();\n    if (!this.rawHTMLmode) {\n      e.target.classList.add(ACTIONS_ACTIVE)\n    } else {\n      e.target.classList.remove(ACTIONS_ACTIVE)\n    }\n\n    this.rawHTMLmode = !this.rawHTMLmode;\n    this.renderContent();\n  }\n  // Duplicate clicked row member of rowList which stored by area\n  onDuplicate = (e) => {\n    e.preventDefault();\n\n    const component = Object.assign({}, this.component);\n    const index = this.index;\n    this.fire(DUPLICATE_ROW, {\n      component,\n      index\n    });\n  }\n  // Delete clicked row member of rowList which stored by area\n  onDelete = (e) => {\n    e.preventDefault();\n\n    const component = Object.assign({}, this.component);\n    const index = this.index;\n    this.fire(DELETE_ROW, {\n      component,\n      index\n    });\n  }\n\n  applyStyle() {\n    const { name, style } = this.component;\n    let linkName = `leylim-css-module-${name}`;\n    //https://stackoverflow.com/questions/1053902/how-to-convert-a-title-to-a-url-slug-in-jquery\n    linkName = linkName.toLowerCase().trim()\n      .toLowerCase()\n      .replace(/ /g, '-')\n      .replace(/[^\\w-]+/g, '')\n\n    const link = document.querySelector(`#${linkName}`)\n    if (link) return;\n\n    const linkNode = document.createElement('STYLE');\n    linkNode.setAttribute('id', linkName)\n    linkNode.innerHTML = style;\n    document.head.appendChild(linkNode);\n  }\n\n  render(index) {\n    const { ACTIONS_DUPLICATE, ACTIONS_DELETE, ACTIONS_HTML, ACTIONS_ACTIVE } = this.actionButtons;\n\n    // index is stored for duplicate and delete actions\n    this.index = index;\n\n    const areaNode = document.querySelector(`.${AREA_NODE}`);\n    const rowNode = document.createElement('div');\n    rowNode.classList.add(AREA_ROW_NODE);\n    // For component template (HTML)\n    const templateNode = document.createElement('div');\n    templateNode.classList.add(AREA_ROW_TEMPLATE_NODE);\n    // For row actions delete, duplicate, edit etc.\n    const actionsNode = document.createElement('div');\n    actionsNode.classList.add(AREA_ROW_ACTIONS_NODE);\n    actionsNode.innerHTML = `\n      <a href=\"#\" class=\"${ACTIONS_DUPLICATE}\">C</a>\n      <a href=\"#\" class=\"${ACTIONS_DELETE}\">D</a>\n      <a href=\"#\" class=\"${ACTIONS_HTML} ${this.rawHTMLmode ? ACTIONS_ACTIVE : ''}\">E</a>\n    `;\n\n    this.rowNode = rowNode;\n    this.templateNode = templateNode;\n    this.actionsNode = actionsNode;\n\n    // Appending child node to parent node\n    rowNode.appendChild(templateNode);\n    rowNode.appendChild(actionsNode);\n    areaNode.appendChild(rowNode);\n\n    // Apply component based css\n    this.applyStyle();\n\n    // Render content for two condition; rawHTMLmode and !rawHTMLmode\n    this.renderContent(true /*initial*/);\n    // Finally attachEvents :)\n    this.attachEvents();\n  }\n}\n","import Bus from './bus';\nimport Row from './row';\nimport { AREA_NODE } from './constant';\nimport { ADD_COMPONENT, DUPLICATE_ROW, DELETE_ROW } from './events';\n\n/**\n * Area is a member of Leylim and that manage update, delete, duplicate ~ row, etc. actions.\n * Area has contain and store all component as template.\n * Therefore can generate dirty html string.\n *\n * @export\n * @class Area\n * @extends {Bus}\n */\nexport default class Area extends Bus {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.rowList = [];\n\n    const {\n      beforeRowUpdate,\n      rowUpdated\n    } = this.options.events;\n\n    Row.useEvents({\n      beforeRowUpdate,\n      rowUpdated\n    })\n\n    this.subscribe(this.handleEvents);\n    this.generateRow();\n    this.initArea();\n    this.render();\n  }\n  /**\n   * Return all rowlist data\n   * @memberof Area\n   * @return {Object} Row list\n   */\n  getRowData() {\n    const data = [];\n    const list = this.rowList;\n    for (var ii = 0; ii < list.length; ii++) {\n      let rawData = list[ii].getRawData();\n      data.push(JSON.stringify(rawData));\n    }\n\n    return data;\n  }\n  /**\n   * For external raw data generating.\n   *\n   * @example\n   * ```\n   *  const components = [...];\n   *\n   *  const rowList = [\n   *    {\n   *      name: 'hacucuao',\n   *      template: `<div contenteditable>Template hacucuao</div>`\n   *    }\n   *  ]\n   *  const leylim = new Leylim({\n   *    el: '#app',\n   *    components,\n   *    rowList\n   *  });\n   * ```\n   *\n   * @memberof Area\n  */\n  generateRow() {\n    const { rowList } = this.options;\n    for (var ii = 0; ii < rowList.length; ii++) {\n      this.rowList.push(new Row(rowList[ii]));\n    }\n  }\n  /**\n   * This actions trigger by listItem\n   * @param {Object} row\n   * @memberof Area\n   */\n  duplicateRow(row) {\n    const {\n      beforeRowDuplicate,\n      rowDuplicated\n    } = this.options.events;\n    let interimRow;\n    beforeRowDuplicate(row.component, (newRow) => {\n      interimRow = newRow;\n      this.rowList.splice((row.index + 1), 0, new Row(newRow));\n      this.render();\n    });\n    rowDuplicated(interimRow);\n  }\n\n  /**\n   * This actions trigger by listItem\n   * @param {Object} row\n   * @memberof Area\n   */\n  deleteRow(row) {\n    const {\n      beforeRowDelete,\n      rowDeleted\n    } = this.options.events;\n\n    let interimRow;\n\n    beforeRowDelete(row, (newRow) => {\n      interimRow = newRow;\n      this.rowList.splice(newRow.index, 1);\n      this.render();\n    });\n    rowDeleted(interimRow);\n  }\n  /**\n   * Actions from listItem\n   * This actions trigger by listItem\n   * @param {any} component\n   * @memberof Area\n   */\n  addComponent(row) {\n    const {\n      beforeRowAdd,\n      rowAdded\n    } = this.options.events;\n\n    let interimRow;\n    beforeRowAdd(row, (newRow) => {\n      interimRow = newRow;\n      this.rowList.push(new Row(newRow));\n      this.render();\n    });\n\n    rowAdded(interimRow)\n  }\n  /**\n   * It make out all relevant events .\n   * @memberof Area\n   */\n  handleEvents = (type, params) => {\n    switch (type) {\n      case ADD_COMPONENT:\n        this.addComponent(params);\n        break;\n      case DUPLICATE_ROW:\n        this.duplicateRow(params);\n        break;\n      case DELETE_ROW:\n        this.deleteRow(params);\n        break;\n    }\n  };\n  /**\n   * This method appendices itself to rootEl of leylim.\n   */\n  initArea() {\n    const { rootNode } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const areaNode = document.createElement('div');\n    areaNode.classList.add(AREA_NODE);\n    rootEl.appendChild(areaNode);\n    this.areaNode = areaNode;\n  }\n  /**\n   * re-render and init render all row\n   * @memberof Area\n   */\n  render() {\n    const areaNode = this.areaNode;\n\n    while (areaNode.firstChild) {\n      areaNode.removeChild(areaNode.firstChild);\n    }\n\n    if (this.rowList.length) {\n      for (var ii = 0; ii < this.rowList.length; ii++) {\n        this.rowList[ii].render(ii);\n      }\n    } else {\n      areaNode.innerHTML = `<div class=\"leylim__empty-area\"><span>😒</span> </br> No content</div>`\n    }\n  }\n}\n","import Bus from './bus';\nimport { FOOTER_NODE } from './constant';\n\n/**\n * Footer\n * @export\n * @class Footer\n */\nexport default class Footer extends Bus {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.init();\n  }\n  /**\n   * Generate button node for footer\n   *\n   * @param {object} buttonOptions\n   * @returns {HTMLButtonElement}\n   * @memberof Footer\n   */\n  getButtons(buttonOptions) {\n\n    const button = document.createElement('button');\n    button.classList.add('leylim__footer-button');\n    button.classList.add(buttonOptions.class);\n    button.setAttribute('type', 'button')\n    button.innerText = buttonOptions.text;\n    button.onclick = buttonOptions.handler;\n\n    return button;\n  }\n\n  init() {\n    const { rootNode, buttons } = this.options;\n    const rootEl = document.querySelector(rootNode);\n    const buttonNodeContainer = document.createElement('div');\n    buttonNodeContainer.classList.add(FOOTER_NODE);\n\n    for (var ii = 0; ii < buttons.length; ii++) {\n      let button = this.getButtons(buttons[ii]);\n      buttonNodeContainer.appendChild(button);\n    }\n    rootEl.appendChild(buttonNodeContainer);\n  }\n\n}\n","export default [\n  {\n    command: 'bold',\n    icon: 'fa fa-bold'\n  },\n  {\n    command: 'italic',\n    icon: 'fa fa-italic'\n  },\n  {\n    command: 'createLink',\n    icon: 'fa fa-link',\n    handler(){\n      const url = window.prompt('Please insert a link', 'http://');\n      document.execCommand('createLink', true, url);\n    }\n  },\n  {\n    command: 'unLink',\n    icon: 'fa fa-unlink',\n  },\n  {\n    command: 'cut',\n    icon: 'fa fa-cut'\n  },\n  {\n    command: 'delete',\n    icon: 'fa fa-trash-o',\n    handler(selection){\n      document.execCommand('insertHTML', true, `<p>${selection.toString()}</p>`);\n    }\n  },\n  {\n    command: 'fontName',\n    icon: 'fa fa-font',\n    value: 'sans',\n    handler(selection){\n      const ff = window.prompt('Please insert font family', 'sans');\n      document.execCommand('insertHTML', true, `<span style=\"font-family: ${ff}\">${selection}</span>`);\n    }\n  },\n  {\n    command: 'foreColor',\n    icon: 'fa fa-paint-brush',\n    value: 'yellow',\n    handler(selection){\n      const color = window.prompt('Please insert color', '#000');\n      document.execCommand('insertHTML', true, `<span style=\"color: ${color}\">${selection}</span>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 1,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h1>${selection}</h1>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 2,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h2>${selection}</h2>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 3,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h3>${selection}</h3>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 4,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h4>${selection}</h4>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 5,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h5>${selection}</h5>`);\n    }\n  },\n  {\n    command: 'formatBlock',\n    icon: 'fa fa-header fa-1',\n    innerText: 6,\n    handler(selection){\n      document.execCommand('insertHTML', true, `<h6>${selection}</h6>`);\n    }\n  },\n]\n","/* eslint-disable */\nimport { LEYLIM_ROOT } from './constant';\nimport editorButtons from './editorButtons';\n\n\nexport default class Editor {\n  constructor(options) {\n    this.options = options;\n    this.editorNode = null;\n    const _editorButtons = options.filter ? options.filter(editorButtons) : editorButtons;\n\n    if(options.merge){\n      this.buttons = _editorButtons.concat(options.buttons);\n    }else{\n      this.buttons = options.buttons;\n    }\n\n    this.init();\n    this.catchSelection();\n  }\n\n  /**\n   * @todo when selection contains any button add active class to selected button\n   * @memberof Editor\n   */\n  catchSelection() {\n    document.onselectionchange = (e) => {\n      const selection = window.getSelection();\n      // console.log(selection);\n    }\n  }\n\n\n  init() {\n    const buttons = this.buttons;\n    const rootNode = document.querySelector(`.${LEYLIM_ROOT}`);\n    const editorNode = document.createElement('div');\n    this.editorNode = editorNode;\n    editorNode.classList.add('leylim-editor');\n\n\n    for (let ii = 0; ii < buttons.length; ii++) {\n      const buttonNode = document.createElement('A');\n      buttonNode.href = '#';\n      buttonNode.classList.add('leylim-editor__button');\n      buttonNode.innerHTML = `<i class=\"${buttons[ii].icon}\"></i>${buttons[ii].innerText || ''}`;\n      buttonNode.onclick = (e) => this.onClick(e, buttons[ii]);\n\n      editorNode.appendChild(buttonNode);\n    }\n    rootNode.appendChild(editorNode);\n  }\n\n  /**\n   * @todo provide selection object for commandObject handler (customEditorButtons)\n   *\n   * @memberof Editor\n   */\n  onClick = (e, commandObject) => {\n    e.preventDefault();\n    if(commandObject.handler){\n      commandObject.handler(window.getSelection())\n    }else{\n      document.execCommand(commandObject.command, true, commandObject.value || 2)\n    }\n\n  }\n\n}\n","export default {\n  beforeCreate() { },\n  created() { },\n  beforeRowUpdate(templateNode, component, cb) { cb(component, component); },\n  rowUpdated() { },\n  beforeRowDelete(row, cb) { cb(row); },\n  rowDeleted() { },\n  beforeRowDuplicate(row, cb) { cb(row); },\n  rowDuplicated() { },\n  beforeRowAdd(row, cb) { cb(row); },\n  rowAdded() { },\n}\n","import Bus from './bus';\nimport List from './list';\nimport Area from './area';\nimport Footer from './footer';\nimport Editor from './editor';\nimport lifeCycle from './lifeCycle';\n\nimport { LEYLIM_ROOT } from './constant';\n\n/**\n * Constructor of Leylim\n *\n * @example\n * ```javascript\n * const leylim = new Leylim({\n *   el: '#app',\n *   components,\n *   rowList\n * });\n * ```\n *\n * @export\n * @class Leylim\n * @extends {Bus}\n */\nexport default class Leylim extends Bus {\n\n  constructor(options) {\n    super();\n    /**\n     * @todo extends options\n     * @todo check is options.el dom element?\n     */\n    this.options = options;\n    const { beforeCreate = lifeCycle.beforeCreate } = this.options;\n    beforeCreate(this.options);\n    this.init();\n  }\n  /**\n   * For plugin using\n   * @static\n   * @memberof Leylim\n   */\n  static use() {\n\n  }\n  /**\n   * Update all member of Leylim\n   * Avilable update options; components, rowList, buttons\n   */\n  update(options) {\n    const { components } = options;\n    this.options.components = components;\n    this._list.update(components);\n  }\n  /**\n   * Public method for get all rowList\n   * @public\n   * @returns\n   * @memberof Leylim\n   */\n  getRowData() {\n    return this._area.getRowData();\n  }\n  /**\n   * init member of leylim for example; List, Area etc\n   * @private\n   */\n  init() {\n    const {\n      components = [],\n      el, rowList = [],\n      buttons = [],\n      thumbnailPath = '',\n      customEditorButtons = {\n        merge: true,\n        buttons: [],\n      },\n      created = lifeCycle.created,\n      beforeRowUpdate = lifeCycle.beforeRowUpdate,\n      rowUpdated = lifeCycle.rowUpdated,\n      beforeRowDelete = lifeCycle.beforeRowDelete,\n      rowDeleted = lifeCycle.rowDeleted,\n      beforeRowDuplicate = lifeCycle.beforeRowDuplicate,\n      rowDuplicated = lifeCycle.rowDuplicated,\n      beforeRowAdd = lifeCycle.beforeRowAdd,\n      rowAdded = lifeCycle.rowAdded,\n    } = this.options;\n\n    if (!components.length)\n      throw new Error(\"Can you give me components? please! If you don't have an idea; https://github.com/abdullah/leylim \");\n\n    const appNode = document.querySelector(el);\n    const leylimNode = document.createElement('div');\n    leylimNode.classList.add(LEYLIM_ROOT);\n    appNode.appendChild(leylimNode);\n\n    this._list = new List({\n      rootNode: `.${LEYLIM_ROOT}`,\n      thumbnailPath,\n      components\n    });\n\n    this._footer = new Footer({\n      rootNode: `.${LEYLIM_ROOT}`,\n      buttons\n    });\n\n    this._area = new Area({\n      rootNode: `.${LEYLIM_ROOT}`,\n      rowList,\n      events: {\n        beforeRowUpdate,\n        rowUpdated,\n        beforeRowDelete,\n        rowDeleted,\n        beforeRowDuplicate,\n        rowDuplicated,\n        beforeRowAdd,\n        rowAdded\n      }\n    });\n\n\n    this._editor = new Editor({\n      merge: customEditorButtons.merge,\n      buttons: customEditorButtons.buttons,\n      filter: customEditorButtons.filter\n    });\n\n    created();\n  }\n}\n"],"names":["_handlers","Bus","fn","push","filter","item","eventName","params","thisObj","scope","window","forEach","call","ADD_COMPONENT","DUPLICATE_ROW","DELETE_ROW","ListItem","component","thumbnailPath","render","e","preventDefault","fire","this","parent","document","querySelector","listItem","createElement","href","onclick","bind","classList","add","innerHTML","thumbnail","appendChild","List","options","listNode","init","components","renderListItem","rootNode","rootEl","ii","length","Row","Object","assign","rowNode","index","templateNode","actionsNode","rawHTMLmode","actionButtons","state","editableChild","querySelectorAll","setAttribute","toggleEditable","interimRawHTML","ACTIONS_DUPLICATE","ACTIONS_DELETE","ACTIONS_HTML","duplicateButton","split","join","deleteButton","editButton","onblur","_this2","onUpdateRowTemplate","onDuplicate","onDelete","changeMode","name","style","linkName","toLowerCase","trim","replace","linkNode","head","ACTIONS_ACTIVE","areaNode","applyStyle","renderContent","attachEvents","beforeRowUpdate","rowUpdated","_this3","node","rawHtml","template","inital","innerText","remove","target","Area","handleEvents","type","addComponent","duplicateRow","deleteRow","rowList","_this","events","useEvents","subscribe","generateRow","initArea","data","list","rawData","getRawData","JSON","stringify","row","beforeRowDuplicate","rowDuplicated","interimRow","newRow","splice","beforeRowDelete","rowDeleted","beforeRowAdd","rowAdded","firstChild","removeChild","Footer","buttonOptions","button","class","text","handler","buttons","buttonNodeContainer","getButtons","url","prompt","execCommand","selection","toString","ff","color","Editor","onClick","commandObject","getSelection","command","value","editorNode","_editorButtons","editorButtons","merge","concat","catchSelection","onselectionchange","buttonNode","icon","cb","beforeCreate","lifeCycle","_list","update","_area","getRowData","el","customEditorButtons","created","Error","appNode","leylimNode","_footer","_editor"],"mappings":"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"}